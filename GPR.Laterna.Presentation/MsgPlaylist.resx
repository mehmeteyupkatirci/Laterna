<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnArtistFlw.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA7MAAAAvCAYAAAAxUp3KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQnSURBVHhe7d3fa5V1AMfx/pXGlIljTcdhjGmzoqljKTHE
        SbgQ82JerIt1IWKIQQomzCBGsBu7cDe7kGAEgQUlWAgijMAGmS5K08lcpvbL+sb3u/McPJ2TeDHPngde
        L3ijPHvOuf/wPOd5nml6ti9IkiRJklSkjFlJkiRJUuEyZiVJkiRJhcuYlSRJkiQVLmNWkiRJklS4jFlJ
        kiRJUuF64jHb2rInrGsdCV3rj4QXOj+QJEmSJGnZ6u44mjZn25p9dTfpf3vsmF3dPJC+dEfv+fD6K1ck
        SZIkSXrq7dp6KfR2f5QuqtbbqrH/HbMdbaPpC7IvGx68Go4dvB7G37sZzkwuSJIkSZK0bE2cvJU25+je
        ucoO3d0/m+4OrrdZa8ZsvBq7ZcNk5cPvvPVTuPjVvQAAAACNMHfl93Di8I3KLt22aTq0rBqs2q41YzYb
        sm8MfB+mp+6UvwoAAAAa69zZu+ku4bhRX33ps9DctL3+mI23FmdDNi5hAAAAWEmLCw/DyNC1tFXjM51q
        xmy8vTj7jawrsgAAAOTFzMX7aasO9c+G9rX7q8fsi10fpj/G38gCAABAnpwan0+bNd5uXDVmd26+kP5w
        eeZB+VQAAADIhz//+Cf9JDbu1vgwqDRm40tp44F4HzIAAADkUXxVbNyune2HlsZs6bkD6cD77/5cPgUA
        AADyJb6PNm7XntLY0pjdWDqeDsR7kAEAACCPPv/kl7Rd41ON05iN/4kH4soFAACAPMquzBqzAAAAFIYx
        CwAAQOEYswAAABSOMQsAAEDhGLMAAAAUjjELAABA4RizAAAAFI4xCwAAQOEYswAAABSOMQsAAEDhGLMA
        AAAUTs2Y7SmNpQOnJ26XTwEAAIB8+fTjxeox29l+KB2YOHmrfAoAAADky/TUneoxu651JB14+80fy6cA
        AABAvpwan0/btWv9kaUx29y0Pezun00H52/+VT4NAAAA8mN071zarW1r9i2N2Vjf81PpYFy6AAAAkCfn
        zt5Nm3Xn5gtpw1bGbPva/ekPscszD8qnAwAAwMqKdxAPD15Ne7W742j1mI1lr+gZGboW7t/7u/wxAAAA
        WDnHDl5PW3XbpunKfq0as/G3swMvf5lOOjD8Q/ju29/KHwUAAIDGWlx4GE4cvpE26q6tl0LLqsH6YzbW
        2rIn7Og9n06OxUcfAwAAQCN9/cWvlVuLX+v7JnS0jVZt15oxG1vdPBC2bJisDNp423F8B+2ZyYX0o9v4
        ryRJkiRJy1XcmvFi6umJ2+lO4WyPxluLH70im1V3zGbF5RufFJV9iSRJkiRJjShejd1YOl53q8YeO2az
        4jt8ekpj6QFRkiRJkiQ9zeLbdupt00d7ojErSZIkSVKeMmYlSZIkSYXLmJUkSZIkFS5jVpIkSZJUuIxZ
        SZIkSVLB6gv/AqCzBhDf5e72AAAAAElFTkSuQmCC
</value>
  </data>
</root>