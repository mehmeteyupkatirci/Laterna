<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRegister.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAABDCAYAAABk+GEBAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARkSURBVHhe7d3Na1RXAMbh/iGZzEy6EFwEBDfu6qoiJiIS
        kcYP0lAIKSi1RAnJwoCLbEIp2EURFykUWhdCBUs3pViotIsqlNpFERcpFOLGxHybxtOcM3emiZmEaKZn
        9TzwQ7m5M/uXe+/ctzqqR4MkSZIk5cgAkSRJkpQtA0SSJElStgwQSZIkSdkyQCRJkiRlywCRJEmSlK1d
        D5Dq4ROh0nMqVC6eDeXxfkmSJEkK5aFzaSdUj5xsuiNebecB0tmVvrT0cCi0PRuVJEmSpO17fCWUbwyk
        ixdN98V62w6QSu/p9AX1L9s/cy30zN0Mgwtfh4ml7yVJkiQpXFq4nXbCodmJ/4bI9Ei6c6rZztg6QOJV
        j8nBxoe75z4P3734IwAAAOzk93/+DmfmJxtbov3uhdBx8PimvbFlgNTHx9szV8P1pXvFVwEAAOzOrZUH
        6Q6quCtKP34UOvYdaz5A0m1XxfiI6wUAAOBNPF2bCwdmx9O+iM+Vbx0gnV2NZz5c+QAAAPbqhxd/1q6C
        TI+EanfP5gFS/uSD9Mf4zAcAAEArDC/eqY2QeCvWxgFSenQ5/eH+6pPiVAAAgL1ZfrmaHvGIWyM+kJ4G
        SHxpSDwQ79ECAABopfgqj7g3KgO9tQFSef+9dKB//sviFAAAgNaI7wuJe6M81lcbIOXR8+lAvD8LAACg
        lb5Y/qU2QMb7iwGy/p94IC4TAACAVmpcATFAAACA/5sBAgAAZGOAAAAA2RggAABANgYIAACQjQECAABk
        Y4AAAADZGCAAAEA2BggAAJCNAQIAAGRjgAAAANkYIAAAQDYGCAAAkI0BAgAAZGOAAAAA2RggAABANgYI
        AACQjQECAABkY4AAAADZGCAAAEA2BggAAJCNAQIAAGRjgAAAANkYIAAAQDYGCAAAkI0BAgAAZGOAAAAA
        2RggAABANgYIAACQjQECAABkY4AAAADZbB0gY33pwNXFb4tTAAAAWuPG8k+bB0hloDcduLRwuzgFAACg
        Na4v3XtlgPScSgfeff5ZcQoAAEBrDC/eSXujcvFsbYB07DsW2qZH0sG/1p4VpwEAAOzdodmJtDWqR04W
        A2S99q8+TAfjOgEAAGiFWysP0s4oPbqcdkdjgFS7e9IfYvdXnxSnAwAAvJl4d9X+mWtpY5SHzm0eILH6
        z/EemB0Psy+Xio8BAAC8vp65m2lftN+90NgcmwZIfBak9PPH6aR3nn8afl2dKj4KAACwO0/X5sKZ+cm0
        K9oeXwkdB49vM0DWqx4+EUoPh2onrxd/MgsAAGA3vln5rXHbVdvUcKj0nt60N7YMkFRnVyhPDjZGSLwl
        K74jJL7BMD5EEv+VJEmSpLgP4kWL+FLzeBdVfUOk2642XPmo13yAFMW1Ep9Wr3+JJEmSJO3Y1HAoj55v
        ui9iOw6QevH3estjfekhdUmSJElqVvxl3WZ7YmO7GiCSJEmS1IoMEEmSJEnZMkAkSZIkZcsAkSRJkpQt
        A0SSJElSpo6GfwHHFbH+KG9JBAAAAABJRU5ErkJggg==
</value>
  </data>
</root>